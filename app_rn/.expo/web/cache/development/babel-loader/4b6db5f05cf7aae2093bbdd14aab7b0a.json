{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport { useTexture } from \"./useTexture.js\";\nimport { useAsset } from 'use-asset';\n\nfunction getFormatString(format) {\n  switch (format) {\n    case 64:\n      return '-64px';\n\n    case 128:\n      return '-128px';\n\n    case 256:\n      return '-256px';\n\n    case 512:\n      return '-512px';\n\n    default:\n      return '';\n  }\n}\n\nvar LIST_URL = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master/matcaps.json';\nvar MATCAP_ROOT = 'https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d';\n\nfunction useMatcapTexture() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1024;\n  var matcapList = useAsset(function () {\n    return new Promise(function _callee(resolve) {\n      var matcapList;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(LIST_URL).then(function (res) {\n                return res.json();\n              }));\n\n            case 2:\n              matcapList = _context.sent;\n              resolve(matcapList);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  }, 'matcapList');\n  var DEFAULT_MATCAP = matcapList[0];\n  var numTot = React.useMemo(function () {\n    return Object.keys(matcapList).length;\n  }, []);\n  var fileHash = React.useMemo(function () {\n    if (typeof id === 'string') {\n      return id;\n    } else if (typeof id === 'number') {\n      return matcapList[id];\n    }\n\n    return null;\n  }, [id]);\n  var fileName = \"\" + (fileHash || DEFAULT_MATCAP) + getFormatString(format) + \".png\";\n  var url = MATCAP_ROOT + \"/\" + format + \"/\" + fileName;\n  var matcapTexture = useTexture(url);\n  return [matcapTexture, url, numTot];\n}\n\nexport { useMatcapTexture };","map":{"version":3,"sources":["C:/wamp64/www/expo_copie/AwesomeProject/node_modules/@react-three/drei/core/useMatcapTexture.js"],"names":["React","useTexture","useAsset","getFormatString","format","LIST_URL","MATCAP_ROOT","useMatcapTexture","id","matcapList","Promise","resolve","fetch","then","res","json","DEFAULT_MATCAP","numTot","useMemo","Object","keys","length","fileHash","fileName","url","matcapTexture"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT;AACA,SAASC,QAAT,QAAyB,WAAzB;;AAEA,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAC/B,UAAQA,MAAR;AACE,SAAK,EAAL;AACE,aAAO,OAAP;;AAEF,SAAK,GAAL;AACE,aAAO,QAAP;;AAEF,SAAK,GAAL;AACE,aAAO,QAAP;;AAEF,SAAK,GAAL;AACE,aAAO,QAAP;;AAEF;AACE,aAAO,EAAP;AAdJ;AAgBD;;AAED,IAAMC,QAAQ,GAAG,oEAAjB;AACA,IAAMC,WAAW,GAAG,wFAApB;;AACA,SAASC,gBAAT,GAAiD;AAAA,MAAvBC,EAAuB,uEAAlB,CAAkB;AAAA,MAAfJ,MAAe,uEAAN,IAAM;AAC/C,MAAMK,UAAU,GAAGP,QAAQ,CAAC;AAAA,WAAM,IAAIQ,OAAJ,CAAY,iBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACnBC,KAAK,CAACP,QAAD,CAAL,CAAgBQ,IAAhB,CAAqB,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eAAxB,CADmB;;AAAA;AACtCN,cAAAA,UADsC;AAE5CE,cAAAA,OAAO,CAACF,UAAD,CAAP;;AAF4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ,CAAN;AAAA,GAAD,EAGvB,YAHuB,CAA3B;AAIA,MAAMO,cAAc,GAAGP,UAAU,CAAC,CAAD,CAAjC;AACA,MAAMQ,MAAM,GAAGjB,KAAK,CAACkB,OAAN,CAAc;AAAA,WAAMC,MAAM,CAACC,IAAP,CAAYX,UAAZ,EAAwBY,MAA9B;AAAA,GAAd,EAAoD,EAApD,CAAf;AACA,MAAMC,QAAQ,GAAGtB,KAAK,CAACkB,OAAN,CAAc,YAAM;AACnC,QAAI,OAAOV,EAAP,KAAc,QAAlB,EAA4B;AAC1B,aAAOA,EAAP;AACD,KAFD,MAEO,IAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AACjC,aAAOC,UAAU,CAACD,EAAD,CAAjB;AACD;;AAED,WAAO,IAAP;AACD,GARgB,EAQd,CAACA,EAAD,CARc,CAAjB;AASA,MAAMe,QAAQ,SAAMD,QAAQ,IAAIN,cAAlB,IAAmCb,eAAe,CAACC,MAAD,CAAlD,SAAd;AACA,MAAMoB,GAAG,GAAMlB,WAAN,SAAqBF,MAArB,SAA+BmB,QAAxC;AACA,MAAME,aAAa,GAAGxB,UAAU,CAACuB,GAAD,CAAhC;AACA,SAAO,CAACC,aAAD,EAAgBD,GAAhB,EAAqBP,MAArB,CAAP;AACD;;AAED,SAASV,gBAAT","sourcesContent":["import * as React from 'react';\nimport { useTexture } from './useTexture.js';\nimport { useAsset } from 'use-asset';\n\nfunction getFormatString(format) {\n  switch (format) {\n    case 64:\n      return '-64px';\n\n    case 128:\n      return '-128px';\n\n    case 256:\n      return '-256px';\n\n    case 512:\n      return '-512px';\n\n    default:\n      return '';\n  }\n}\n\nconst LIST_URL = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master/matcaps.json';\nconst MATCAP_ROOT = 'https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d';\nfunction useMatcapTexture(id = 0, format = 1024) {\n  const matcapList = useAsset(() => new Promise(async resolve => {\n    const matcapList = await fetch(LIST_URL).then(res => res.json());\n    resolve(matcapList);\n  }), 'matcapList');\n  const DEFAULT_MATCAP = matcapList[0];\n  const numTot = React.useMemo(() => Object.keys(matcapList).length, []);\n  const fileHash = React.useMemo(() => {\n    if (typeof id === 'string') {\n      return id;\n    } else if (typeof id === 'number') {\n      return matcapList[id];\n    }\n\n    return null;\n  }, [id]);\n  const fileName = `${fileHash || DEFAULT_MATCAP}${getFormatString(format)}.png`;\n  const url = `${MATCAP_ROOT}/${format}/${fileName}`;\n  const matcapTexture = useTexture(url);\n  return [matcapTexture, url, numTot];\n}\n\nexport { useMatcapTexture };\n"]},"metadata":{},"sourceType":"module"}