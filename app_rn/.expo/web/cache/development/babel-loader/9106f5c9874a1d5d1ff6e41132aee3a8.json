{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport axios from 'axios';\nimport ViewShot from 'react-native-view-shot';\n\nvar ScreenFinal = function ScreenFinal() {\n  var viewShotRef = useRef();\n\n  function captureAndShareScreenshot() {\n    var imageUri;\n    return _regeneratorRuntime.async(function captureAndShareScreenshot$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(viewShotRef.current.capture());\n\n          case 2:\n            imageUri = _context.sent;\n            console.log(imageUri);\n            Share.share({\n              url: imageUri\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  ;\n\n  var onShare = function onShare() {\n    var result;\n    return _regeneratorRuntime.async(function onShare$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(Share.share({\n              title: 'App link',\n              message: 'Please install this app and stay safe , AppLink :https://play.google.com/store/apps/details?id=nic.goi.aarogyasetu&hl=en',\n              url: 'https://play.google.com/store/apps/details?id=nic.goi.aarogyasetu&hl=en'\n            }));\n\n          case 3:\n            result = _context2.sent;\n\n            if (result.action === Share.sharedAction) {\n              if (result.activityType) {} else {}\n            } else if (result.action === Share.dismissedAction) {}\n\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            alert(_context2.t0.message);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(ViewShot, {\n    style: styles.container,\n    ref: viewShotRef,\n    options: {\n      format: 'png',\n      quality: 0.9\n    }\n  }, React.createElement(Button, {\n    style: styles.btn,\n    title: \"Capture and Share\",\n    onPress: captureAndShareScreenshot\n  }), React.createElement(Text, null, \"SALUT\"));\n};\n\nvar styles = StyleSheet.create({\n  btn: {\n    backgroundColor: 'green',\n    padding: 10,\n    width: 100 + '%',\n    borderRadius: 5,\n    marginBottom: 5\n  },\n  textBtn: {\n    color: 'white',\n    fontSize: 20,\n    textAlign: 'center'\n  },\n  container: {\n    backgroundColor: 'red'\n  }\n});\nexport default ScreenFinal;","map":{"version":3,"sources":["C:/wamp64/www/expo_copie/AwesomeProject/components/ScreenFinal/index.js"],"names":["React","useRef","axios","ViewShot","ScreenFinal","viewShotRef","captureAndShareScreenshot","current","capture","imageUri","console","log","Share","share","url","onShare","title","message","result","action","sharedAction","activityType","dismissedAction","alert","styles","container","format","quality","btn","StyleSheet","create","backgroundColor","padding","width","borderRadius","marginBottom","textBtn","color","fontSize","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;;;;;;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AActB,MAAIC,WAAW,GAAGJ,MAAM,EAAxB;;AACA,WAAeK,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACyBD,WAAW,CAACE,OAAZ,CAAoBC,OAApB,EADzB;;AAAA;AACQC,YAAAA,QADR;AAEEC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAG,YAAAA,KAAK,CAACC,KAAN,CAAY;AAACC,cAAAA,GAAG,EAAEL;AAAN,aAAZ;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsBC;;AAkBH,MAAMM,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAESH,KAAK,CAACC,KAAN,CAAY;AAChCG,cAAAA,KAAK,EAAE,UADyB;AAErCC,cAAAA,OAAO,EAAE,0HAF4B;AAGrCH,cAAAA,GAAG,EAAE;AAHgC,aAAZ,CAFT;;AAAA;AAENI,YAAAA,MAFM;;AAOZ,gBAAIA,MAAM,CAACC,MAAP,KAAkBP,KAAK,CAACQ,YAA5B,EAA0C;AACxC,kBAAIF,MAAM,CAACG,YAAX,EAAyB,CAExB,CAFD,MAEO,CAEN;AACF,aAND,MAMO,IAAIH,MAAM,CAACC,MAAP,KAAkBP,KAAK,CAACU,eAA5B,EAA6C,CAEnD;;AAfW;AAAA;;AAAA;AAAA;AAAA;AAiBZC,YAAAA,KAAK,CAAC,aAAMN,OAAP,CAAL;;AAjBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAoBA,SACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEO,MAAM,CAACC,SADhB;AAEE,IAAA,GAAG,EAAEpB,WAFP;AAGE,IAAA,OAAO,EAAE;AAACqB,MAAAA,MAAM,EAAE,KAAT;AAAgBC,MAAAA,OAAO,EAAE;AAAzB;AAHX,KAII,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEH,MAAM,CAACI,GADhB;AAEE,IAAA,KAAK,EAAC,mBAFR;AAGE,IAAA,OAAO,EAAEtB;AAHX,IAJJ,EASI,oBAAC,IAAD,gBATJ,CADF;AAcD,CAzFD;;AA2FA,IAAMkB,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,GAAG,EAAE;AACHG,IAAAA,eAAe,EAAE,OADd;AAEHC,IAAAA,OAAO,EAAE,EAFN;AAGHC,IAAAA,KAAK,EAAE,MAAM,GAHV;AAIHC,IAAAA,YAAY,EAAE,CAJX;AAKHC,IAAAA,YAAY,EAAE;AALX,GAD0B;AAS/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,OADA;AAEPC,IAAAA,QAAQ,EAAE,EAFH;AAGPC,IAAAA,SAAS,EAAE;AAHJ,GATsB;AAc/Bd,EAAAA,SAAS,EAAE;AACTM,IAAAA,eAAe,EAAC;AADP;AAdoB,CAAlB,CAAf;AAkBA,eAAe3B,WAAf","sourcesContent":["import React, { useRef } from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity, Button, Share, ImageBackground } from 'react-native';\r\nimport axios from 'axios';\r\nimport ViewShot from 'react-native-view-shot';\r\n\r\nconst ScreenFinal = () => {\r\n  // const GenererChaineAleatoire = longueur => {\r\n  //   let listeCar = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n  //   let chaine = '';\r\n  //   let max = listeCar.length - 1;\r\n  //   for (let i = 0; i < longueur; i++) {\r\n  //   chaine = chaine + listeCar[Math.floor(Math.random() * (max + 1) )];\r\n  //   }\r\n  //   return chaine;\r\n  // }\r\n\r\n    // const { photo } = route.params;\r\n\r\n  // const Post_img = async () => {\r\n    let viewShotRef = useRef()\r\n    async function captureAndShareScreenshot() {\r\n      const imageUri = await viewShotRef.current.capture()\r\n      console.log(imageUri)\r\n      Share.share({url: imageUri})\r\n      // imageUri.capture().then((uri) => {\r\n      //   RNFS.readFile(uri, 'base64').then((res) => {\r\n      //     let urlString = 'data:image/jpeg;base64,' + res;\r\n      //     let options = {\r\n      //       title: 'Share Title',\r\n      //       message: 'Share Message',\r\n      //       url: urlString,\r\n      //       type: 'image/jpeg',\r\n      //     };\r\n      //     Share.open(options)\r\n      //       .then((res) => {\r\n      //         console.log(res);\r\n      //       })\r\n      //       .catch((err) => {\r\n      //         err && console.log(err);\r\n      //       });\r\n      //   });\r\n      // });\r\n    };\r\n  //   let token_url = GenererChaineAleatoire(20)\r\n  //   // await axios({\r\n  //   //   method: 'POST',\r\n  //   //   data: 'img='+img+'&token_url='+token_url,\r\n  //   //   // data:{param1:'PARAMETRE API ICI'}\r\n  //   // })\r\n  //   //   .then((response) => {\r\n  //   //     console.log(response)\r\n        \r\n  //   //   })\r\n  //   //   .catch((err) => {\r\n  //   //     console.log(err)\r\n  //   //     alert('Erreur')\r\n  //   //   })\r\n  // }\r\n\r\n\r\n  const onShare = async () => {\r\n    try {\r\n      const result = await Share.share({\r\n       title: 'App link',\r\n  message: 'Please install this app and stay safe , AppLink :https://play.google.com/store/apps/details?id=nic.goi.aarogyasetu&hl=en', \r\n  url: 'https://play.google.com/store/apps/details?id=nic.goi.aarogyasetu&hl=en'\r\n      });\r\n      if (result.action === Share.sharedAction) {\r\n        if (result.activityType) {\r\n          // shared with activity type of result.activityType\r\n        } else {\r\n          // shared\r\n        }\r\n      } else if (result.action === Share.dismissedAction) {\r\n        // dismissed\r\n      }\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <ViewShot\r\n      style={styles.container}\r\n      ref={viewShotRef}\r\n      options={{format: 'png', quality: 0.9}}>\r\n        <Button\r\n          style={styles.btn}\r\n          title=\"Capture and Share\"\r\n          onPress={captureAndShareScreenshot}\r\n        />\r\n        <Text>SALUT</Text>\r\n    </ViewShot>\r\n    //<Image source={{ uri: photo.uri }} style={{width:100+'%',height:100+'%'}}/>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  btn: {\r\n    backgroundColor: 'green',\r\n    padding: 10,\r\n    width: 100 + '%',\r\n    borderRadius: 5,\r\n    marginBottom: 5\r\n  },\r\n\r\n  textBtn: {\r\n    color: 'white',\r\n    fontSize: 20,\r\n    textAlign: 'center',\r\n  },\r\n  container: {\r\n    backgroundColor:'red'\r\n  }\r\n})\r\nexport default ScreenFinal"]},"metadata":{},"sourceType":"module"}