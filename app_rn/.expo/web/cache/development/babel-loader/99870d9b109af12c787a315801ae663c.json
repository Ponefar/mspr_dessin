{"ast":null,"code":"import NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RNFS from 'react-native-fs';\nimport { DOCUMENTS_FOLDER } from \"./BaseModelView\";\nvar IS_IOS = Platform.OS === 'ios';\n\nvar create = function create() {\n  var clearDownloadedFiles = function clearDownloadedFiles() {\n    RNFS.unlink(DOCUMENTS_FOLDER).then(function () {}).catch(function () {});\n  };\n\n  var checkIfARSupported = function checkIfARSupported(callback) {\n    IS_IOS ? NativeModules['3DARModelViewManager'].checkIfARSupported(callback) : callback(false);\n  };\n\n  return {\n    clearDownloadedFiles: clearDownloadedFiles,\n    checkIfARSupported: checkIfARSupported\n  };\n};\n\nexport default create();","map":{"version":3,"sources":["C:/wamp64/www/expo_copie/AwesomeProject/node_modules/react-native-3d-model-view/lib/ARManager.js"],"names":["RNFS","DOCUMENTS_FOLDER","IS_IOS","Platform","OS","create","clearDownloadedFiles","unlink","then","catch","checkIfARSupported","callback","NativeModules"],"mappings":";;AACA,OAAOA,IAAP,MAAiB,iBAAjB;AACA,SAASC,gBAAT;AAEA,IAAMC,MAAM,GAAGC,QAAQ,CAACC,EAAT,KAAgB,KAA/B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjCN,IAAAA,IAAI,CAACO,MAAL,CAAYN,gBAAZ,EACCO,IADD,CACM,YAAM,CAAE,CADd,EAECC,KAFD,CAEO,YAAM,CAAE,CAFf;AAGD,GAJD;;AAMA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvCT,IAAAA,MAAM,GAAGU,aAAa,CAAC,sBAAD,CAAb,CAAsCF,kBAAtC,CAAyDC,QAAzD,CAAH,GAAwEA,QAAQ,CAAC,KAAD,CAAtF;AACD,GAFD;;AAIA,SAAO;AACLL,IAAAA,oBAAoB,EAApBA,oBADK;AAELI,IAAAA,kBAAkB,EAAlBA;AAFK,GAAP;AAID,CAfD;;AAiBA,eAAeL,MAAM,EAArB","sourcesContent":["import { NativeModules, Platform } from 'react-native'\nimport RNFS from 'react-native-fs'\nimport { DOCUMENTS_FOLDER } from './BaseModelView'\n\nconst IS_IOS = Platform.OS === 'ios'\n\nconst create = () => {\n  const clearDownloadedFiles = () => {\n    RNFS.unlink(DOCUMENTS_FOLDER)\n    .then(() => {})\n    .catch(() => {})\n  }\n\n  const checkIfARSupported = (callback) => {\n    IS_IOS ? NativeModules['3DARModelViewManager'].checkIfARSupported(callback) : callback(false)\n  }\n\n  return {\n    clearDownloadedFiles,\n    checkIfARSupported\n  }\n}\n\nexport default create()\n"]},"metadata":{},"sourceType":"module"}