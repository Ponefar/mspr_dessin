{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport axios from 'axios';\nimport GenererChaineAleatoire from \"../assets/random\";\n\nvar ScreenFinal = function ScreenFinal() {\n  console.log(GenererChaineAleatoire);\n\n  var Post_img = function Post_img() {\n    return _regeneratorRuntime.async(function Post_img$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios({\n              method: 'POST',\n              data: 'img=' + img + '&token_url=' + token_url\n            }).then(function (response) {\n              console.log(response);\n            }).catch(function (err) {\n              console.log(err);\n              alert('Erreur');\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(TouchableOpacity, {\n    style: styles.btn,\n    onPress: Post_img\n  }, React.createElement(Text, {\n    style: styles.textBtn\n  }, \"Subscribe\"));\n};\n\nvar styles = StyleSheet.create({\n  btn: {\n    backgroundColor: 'green',\n    padding: 10,\n    width: 100 + '%',\n    borderRadius: 5,\n    marginBottom: 5\n  },\n  textBtn: {\n    color: 'white',\n    fontSize: 20,\n    textAlign: 'center'\n  }\n});\nexport default ScreenFinal;","map":{"version":3,"sources":["C:/wamp64/www/expo_copie/AwesomeProject/components/ScreenFinal/index.js"],"names":["React","axios","GenererChaineAleatoire","ScreenFinal","console","log","Post_img","method","data","img","token_url","then","response","catch","err","alert","styles","btn","textBtn","StyleSheet","create","backgroundColor","padding","width","borderRadius","marginBottom","color","fontSize","textAlign"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,sBAAP;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAGxBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,sBAAZ;;AAEA,MAAMI,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACTL,KAAK,CAAC;AACVM,cAAAA,MAAM,EAAE,MADE;AAEVC,cAAAA,IAAI,EAAE,SAAOC,GAAP,GAAW,aAAX,GAAyBC;AAFrB,aAAD,CAAL,CAKHC,IALG,CAKE,UAACC,QAAD,EAAc;AAClBR,cAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AAED,aARG,EASHC,KATG,CASG,UAACC,GAAD,EAAS;AACdV,cAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACAC,cAAAA,KAAK,CAAC,QAAD,CAAL;AACD,aAZG,CADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAeA,SACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEC,MAAM,CAACC,GADhB;AAEE,IAAA,OAAO,EAAEX;AAFX,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACE;AAApB,iBAJF,CADF;AAUD,CA9BD;;AAiCA,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,GAAG,EAAE;AACHI,IAAAA,eAAe,EAAE,OADd;AAEHC,IAAAA,OAAO,EAAE,EAFN;AAGHC,IAAAA,KAAK,EAAE,MAAM,GAHV;AAIHC,IAAAA,YAAY,EAAE,CAJX;AAKHC,IAAAA,YAAY,EAAE;AALX,GAD0B;AAS/BP,EAAAA,OAAO,EAAE;AACPQ,IAAAA,KAAK,EAAE,OADA;AAEPC,IAAAA,QAAQ,EAAE,EAFH;AAGPC,IAAAA,SAAS,EAAE;AAHJ;AATsB,CAAlB,CAAf;AAeA,eAAezB,WAAf","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\r\nimport axios from 'axios';\r\nimport GenererChaineAleatoire from '../assets/random';\r\nconst ScreenFinal = () => {\r\n  //  const { photo } = route.params;\r\n\r\n  console.log(GenererChaineAleatoire)\r\n\r\n  const Post_img = async () => {\r\n    await axios({\r\n      method: 'POST',\r\n      data: 'img='+img+'&token_url='+token_url,\r\n      // data:{param1:'PARAMETRE API ICI'}\r\n    })\r\n      .then((response) => {\r\n        console.log(response)\r\n        \r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        alert('Erreur')\r\n      })\r\n  }\r\n  return (\r\n    <TouchableOpacity\r\n      style={styles.btn}\r\n      onPress={Post_img}\r\n    >\r\n      <Text style={styles.textBtn}>Subscribe</Text>\r\n\r\n    </TouchableOpacity>\r\n    //<Image source={{ uri: photo.uri }} style={{width:100+'%',height:100+'%'}}/>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  btn: {\r\n    backgroundColor: 'green',\r\n    padding: 10,\r\n    width: 100 + '%',\r\n    borderRadius: 5,\r\n    marginBottom: 5\r\n  },\r\n\r\n  textBtn: {\r\n    color: 'white',\r\n    fontSize: 20,\r\n    textAlign: 'center',\r\n  },\r\n})\r\nexport default ScreenFinal"]},"metadata":{},"sourceType":"module"}