{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Camera } from 'expo-camera';\nimport Tyrex from \"../../img/tyrex.png\";\nimport Snake from \"../../img/snake.png\";\nimport Monkey from \"../../img/monkey.png\";\nimport GetPixelColor from 'react-native-get-pixel-color';\n\nvar CameraScreen = function CameraScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var photoBackground = \"\";\n\n  if (route.params.title === \"Tyrex\") {\n    photoBackground = Tyrex;\n  }\n\n  if (route.params.title === \"Snake\") {\n    photoBackground = Snake;\n  }\n\n  if (route.params.title === \"Monkey\") {\n    photoBackground = Monkey;\n  }\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cameraRef = _useState4[0],\n      setCameraRef = _useState4[1];\n\n  var _useState5 = useState(Camera.Constants.Type.back),\n      _useState6 = _slicedToArray(_useState5, 2),\n      type = _useState6[0],\n      setType = _useState6[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestCameraPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return React.createElement(View, null);\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, null, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      padding: 10,\n      fontSize: 12\n    }\n  }, \"Mettez votre calque dans la zone de l'apareil photo puis appuyez sur le bouton rouge en bas\"), React.createElement(TouchableOpacity, {\n    style: {\n      flex: 0,\n      alignSelf: 'center'\n    },\n    onPress: function onPress() {\n      setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n    }\n  }), React.createElement(Camera, {\n    style: {\n      flex: 1\n    },\n    type: type,\n    ref: function ref(_ref2) {\n      setCameraRef(_ref2);\n    },\n    autoFocus: \"on\"\n  }, React.createElement(ImageBackground, {\n    source: photoBackground,\n    resizeMode: \"cover\",\n    style: {\n      zIndex: 9999,\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      width: 100 + '%',\n      alignSelf: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'white',\n      borderTop: '2px solid black',\n      flex: 0.10,\n      alignItems: 'center'\n    },\n    onPress: function _callee2() {\n      var photo;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(cameraRef.takePictureAsync('photo'));\n\n            case 2:\n              photo = _context2.sent;\n              navigation.navigate('ScreenFinal', {\n                'photo': photo\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, React.createElement(View, {\n    style: {\n      borderWidth: 2,\n      borderColor: 'red',\n      height: 33,\n      width: 33,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(View, {\n    style: {\n      borderWidth: 2,\n      borderColor: 'red',\n      height: 25,\n      width: 25,\n      backgroundColor: 'red'\n    }\n  })))));\n};\n\nexport default CameraScreen;","map":{"version":3,"sources":["C:/wamp64/www/expo_copie/AwesomeProject/components/Camera/index.js"],"names":["React","useState","useEffect","useRef","Camera","Tyrex","Snake","Monkey","GetPixelColor","CameraScreen","navigation","route","photoBackground","params","title","hasPermission","setHasPermission","cameraRef","setCameraRef","Constants","Type","back","type","setType","requestCameraPermissionsAsync","status","flex","justifyContent","textAlign","padding","fontSize","alignSelf","front","ref","zIndex","alignItems","width","backgroundColor","borderTop","takePictureAsync","photo","navigate","borderWidth","borderColor","height","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Text, View, TouchableOpacity, ImageBackground } from 'react-native';\nimport { Camera } from 'expo-camera';\nimport Tyrex from '../../img/tyrex.png'\nimport Snake from '../../img/snake.png'\nimport Monkey from '../../img/monkey.png'\nimport GetPixelColor from 'react-native-get-pixel-color';\n\nconst CameraScreen = ({navigation, route}) => {\n  let photoBackground = \"\"\n  if(route.params.title === \"Tyrex\") {photoBackground = Tyrex}\n  if(route.params.title === \"Snake\") {photoBackground = Snake}\n  if(route.params.title === \"Monkey\") {photoBackground = Monkey}\n const [hasPermission, setHasPermission] = useState(null);\n const [cameraRef, setCameraRef] = useState(null)\n const [type, setType] = useState(Camera.Constants.Type.back);\nuseEffect(() => {\n (async () => {\n const { status } = await Camera.requestCameraPermissionsAsync();\n setHasPermission(status === 'granted');\n })();\n }, []);\n \nif (hasPermission === null) {\n return <View />;\n }\n if (hasPermission === false) {\n return <Text>No access to camera</Text>;\n }\n return (\n <View style={{ flex: 1, justifyContent:'center' }}>\n <Text style={{textAlign:'center', padding:10,fontSize:12}}>Mettez votre calque dans la zone de l'apareil photo puis appuyez sur le bouton rouge en bas</Text>\n <TouchableOpacity\n style={{\n flex: 0,\n alignSelf: 'center',\n }}\n onPress={() => {\n setType(\n type === Camera.Constants.Type.back\n ? Camera.Constants.Type.front\n : Camera.Constants.Type.back\n );\n }}>\n </TouchableOpacity>\n   <Camera style={{ flex: 1}} type={type} ref={ref => {\n setCameraRef(ref);\n }} autoFocus='on'>\n\n<ImageBackground source={photoBackground} resizeMode=\"cover\" \n  style={{\n    zIndex:9999, \n    flex:1,\n    justifyContent:'center',\n    alignItems:'center',\n  }} \n/>\n\n <TouchableOpacity \n style={{\n   width:100+'%',\n   alignSelf: 'center',\n   justifyContent:'center', \n   backgroundColor:'white',\n   borderTop:'2px solid black',\n   flex: 0.10,\n   alignItems: 'center',\n\n  }} onPress={async() => {\n//  if(cameraRef){\n let photo = await cameraRef.takePictureAsync('photo');\n navigation.navigate('ScreenFinal',{'photo':photo});\n//  } else {\n//    alert('Error')\n//  }\n }}>\n\n <View style={{ \n borderWidth: 2,\n borderColor: 'red',\n height: 33,\n width:33,\n display: 'flex',\n justifyContent: 'center',\n alignItems: 'center'}}\n >\n <View style={{\n borderWidth: 2,\n borderColor: 'red',\n height: 25,\n width:25,\n backgroundColor: 'red'}} >\n </View>\n </View>\n </TouchableOpacity>\n    </Camera>\n  </View>\n\n );\n}\nexport default CameraScreen"]},"metadata":{},"sourceType":"module"}