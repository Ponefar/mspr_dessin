{"ast":null,"code":"var _this = this;\n\nimport React, { useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport axios from 'axios';\nimport ViewShot from 'react-native-view-shot';\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\n\nvar ScreenFinal = function ScreenFinal() {\n  var viewShot = useRef();\n\n  captureAndShareScreenshot = function captureAndShareScreenshot() {\n    viewShot.current.capture().then(function (uri) {\n      RNFS.readFile(uri, 'base64').then(function (res) {\n        var urlString = 'data:image/jpeg;base64,' + res;\n        var options = {\n          title: 'Share Title',\n          message: 'Share Message',\n          url: urlString,\n          type: 'image/jpeg'\n        };\n        Share.open(options).then(function (res) {\n          console.log(res);\n        }).catch(function (err) {\n          err && console.log(err);\n        });\n      });\n    });\n  };\n\n  return React.createElement(ViewShot, {\n    style: styles.container,\n    ref: viewShot,\n    options: {\n      format: 'jpg',\n      quality: 0.9\n    }\n  }, React.createElement(View, null, React.createElement(Button, {\n    style: styles.label,\n    title: \"Capture and Share\",\n    onPress: _this.captureAndShareScreenshot\n  })));\n};\n\nvar styles = StyleSheet.create({\n  btn: {\n    backgroundColor: 'green',\n    padding: 10,\n    width: 100 + '%',\n    borderRadius: 5,\n    marginBottom: 5\n  },\n  textBtn: {\n    color: 'white',\n    fontSize: 20,\n    textAlign: 'center'\n  }\n});\nexport default ScreenFinal;","map":{"version":3,"sources":["C:/wamp64/www/expo_copie/AwesomeProject/components/ScreenFinal/index.js"],"names":["React","useRef","axios","ViewShot","ScreenFinal","viewShot","captureAndShareScreenshot","current","capture","then","uri","RNFS","readFile","res","urlString","options","title","message","url","type","Share","open","console","log","catch","err","styles","container","format","quality","label","StyleSheet","create","btn","backgroundColor","padding","width","borderRadius","marginBottom","textBtn","color","fontSize","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;;;;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AActB,MAAIC,QAAQ,GAAGJ,MAAM,EAArB;;AACAK,EAAAA,yBAAyB,GAAG,qCAAM;AAChCD,IAAAA,QAAQ,CAACE,OAAT,CAAiBC,OAAjB,GAA2BC,IAA3B,CAAgC,UAACC,GAAD,EAAS;AACvCC,MAAAA,IAAI,CAACC,QAAL,CAAcF,GAAd,EAAmB,QAAnB,EAA6BD,IAA7B,CAAkC,UAACI,GAAD,EAAS;AACzC,YAAIC,SAAS,GAAG,4BAA4BD,GAA5C;AACA,YAAIE,OAAO,GAAG;AACZC,UAAAA,KAAK,EAAE,aADK;AAEZC,UAAAA,OAAO,EAAE,eAFG;AAGZC,UAAAA,GAAG,EAAEJ,SAHO;AAIZK,UAAAA,IAAI,EAAE;AAJM,SAAd;AAMAC,QAAAA,KAAK,CAACC,IAAN,CAAWN,OAAX,EACGN,IADH,CACQ,UAACI,GAAD,EAAS;AACbS,UAAAA,OAAO,CAACC,GAAR,CAAYV,GAAZ;AACD,SAHH,EAIGW,KAJH,CAIS,UAACC,GAAD,EAAS;AACdA,UAAAA,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAP;AACD,SANH;AAOD,OAfD;AAgBD,KAjBD;AAkBD,GAnBD;;AAmCF,SACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEC,MAAM,CAACC,SADhB;AAEE,IAAA,GAAG,EAAEtB,QAFP;AAGE,IAAA,OAAO,EAAE;AAACuB,MAAAA,MAAM,EAAE,KAAT;AAAgBC,MAAAA,OAAO,EAAE;AAAzB;AAHX,KAIE,oBAAC,IAAD,QACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEH,MAAM,CAACI,KADhB;AAEE,IAAA,KAAK,EAAC,mBAFR;AAGE,IAAA,OAAO,EAAE,KAAI,CAACxB;AAHhB,IADF,CAJF,CADF;AAeD,CAjED;;AAoEA,IAAMoB,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,GAAG,EAAE;AACHC,IAAAA,eAAe,EAAE,OADd;AAEHC,IAAAA,OAAO,EAAE,EAFN;AAGHC,IAAAA,KAAK,EAAE,MAAM,GAHV;AAIHC,IAAAA,YAAY,EAAE,CAJX;AAKHC,IAAAA,YAAY,EAAE;AALX,GAD0B;AAS/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,OADA;AAEPC,IAAAA,QAAQ,EAAE,EAFH;AAGPC,IAAAA,SAAS,EAAE;AAHJ;AATsB,CAAlB,CAAf;AAeA,eAAetC,WAAf","sourcesContent":["import React, {useRef} from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity, Button } from 'react-native';\r\nimport axios from 'axios';\r\nimport ViewShot from 'react-native-view-shot';\r\nimport {PermissionsAndroid} from 'react-native'\r\n\r\nconst ScreenFinal = () => {\r\n  // const GenererChaineAleatoire = longueur => {\r\n  //   let listeCar = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n  //   let chaine = '';\r\n  //   let max = listeCar.length - 1;\r\n  //   for (let i = 0; i < longueur; i++) {\r\n  //   chaine = chaine + listeCar[Math.floor(Math.random() * (max + 1) )];\r\n  //   }\r\n  //   return chaine;\r\n  // }\r\n\r\n    // const { photo } = route.params;\r\n\r\n  // const Post_img = async () => {\r\n    let viewShot = useRef()\r\n    captureAndShareScreenshot = () => {\r\n      viewShot.current.capture().then((uri) => {\r\n        RNFS.readFile(uri, 'base64').then((res) => {\r\n          let urlString = 'data:image/jpeg;base64,' + res;\r\n          let options = {\r\n            title: 'Share Title',\r\n            message: 'Share Message',\r\n            url: urlString,\r\n            type: 'image/jpeg',\r\n          };\r\n          Share.open(options)\r\n            .then((res) => {\r\n              console.log(res);\r\n            })\r\n            .catch((err) => {\r\n              err && console.log(err);\r\n            });\r\n        });\r\n      });\r\n    };\r\n  //   let token_url = GenererChaineAleatoire(20)\r\n  //   // await axios({\r\n  //   //   method: 'POST',\r\n  //   //   data: 'img='+img+'&token_url='+token_url,\r\n  //   //   // data:{param1:'PARAMETRE API ICI'}\r\n  //   // })\r\n  //   //   .then((response) => {\r\n  //   //     console.log(response)\r\n        \r\n  //   //   })\r\n  //   //   .catch((err) => {\r\n  //   //     console.log(err)\r\n  //   //     alert('Erreur')\r\n  //   //   })\r\n  // }\r\n  return (\r\n    <ViewShot\r\n      style={styles.container}\r\n      ref={viewShot}\r\n      options={{format: 'jpg', quality: 0.9}}>\r\n      <View>\r\n        <Button\r\n          style={styles.label}\r\n          title=\"Capture and Share\"\r\n          onPress={this.captureAndShareScreenshot}\r\n        />\r\n      </View>\r\n    </ViewShot>\r\n    //<Image source={{ uri: photo.uri }} style={{width:100+'%',height:100+'%'}}/>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  btn: {\r\n    backgroundColor: 'green',\r\n    padding: 10,\r\n    width: 100 + '%',\r\n    borderRadius: 5,\r\n    marginBottom: 5\r\n  },\r\n\r\n  textBtn: {\r\n    color: 'white',\r\n    fontSize: 20,\r\n    textAlign: 'center',\r\n  },\r\n})\r\nexport default ScreenFinal"]},"metadata":{},"sourceType":"module"}